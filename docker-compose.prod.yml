version: "3.9"
services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file: .env.production
    environment:
      NODE_ENV: production
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    env_file: .env.production
    environment:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: "1"
    expose:
      - "3000"
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - web
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

  db:
    image: mongo:7
    container_name: apptit_mongo
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: apptit_redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:

networks:
  default:
    name: apptit_net
